---
title: "PISA"
format: html
editor: visual
---

## PISA ANALYSIS

```{r}
library(haven)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(grattantheme)
library(glue)
library(officer)
library(ggtext)
library(Rrepest)
library(intsvy)
# reading sav file
PISA2000 <- read_sav("data/CY01_AUS_PISA2000_StdQ_Achieve_and_SchQ_forPublic_Release.sav")
PISA2003 <- read_sav("data/CY02_AUS_PISA2003_StdQ_AchieveandSchQ_forPublic_Release.sav")
PISA2006 <- read_sav("data/CY03_AUS_PISA2006_StdQAchieve andSchQ_forPublicRelease.sav")
PISA2009_1 <- read_sav("data/PISA2009_ScQ_AUS_release.sav") #need to check
PISA2009_2 <- read_sav("data/PISA2009_StQ_AUS_release.sav") #need to check, has math vals
PISA2012 <- read_sav("data/PISA2012_StdQ_AUS.sav")
PISA2015 <- read_sav("data/CY6_MS_AUS_PISA2015_StudentandAchievementforPublicRelease.sav")
PISA2018 <- read_sav("data/CY7_MS_AUS_PISA2018_StudentandAchievement_PublicRelease.sav")
PISA2022 <- read_sav("data/CY08_MS_AUS_PISA 2022_Student_and_Achievement_Public.sav")


```

Monday: PISA 

**Download PISA data from ACER website and save to shared folder (2 hr)**

DONE the first

**Import each dataset (1 hr)**

DONE, except 2015 which didn't download.

**Filter for Year 10s (1hr) **

Looking for variable ST001D01T: 10

```{r}
# taking all the year 10s out of PISA 2000
PISA2000_Y10 <- PISA2000 %>% filter(st02q01 == 10)

# taking all the year 10s out of PISA 2003
PISA2003_Y10 <- PISA2003 %>% filter(ST01Q01 == 10)

# taking all the year 10s out of PISA 2006
PISA2006_Y10 <- PISA2006 %>% filter(ST01Q01 == 10)

# taking all the year 10s out of PISA 2009
PISA2009_2_Y10 <- PISA2009_2 %>% filter(ST01Q01 == 10)

# taking all the year 10s out of PISA 2012
PISA2012_Y10 <- PISA2012 %>% filter(ST01Q01 == 10)

PISA_2015_Y10 <- PISA2015 %>% filter(ST001D01T == 10)

# taking all the year 10s out of PISA 2018
PISA2018_Y10 <- PISA2018 %>% filter(ST001D01T == 10)

# taking all the year 10s out of PISA 2022
PISA2022_Y10 <- PISA2022 %>% filter(ST001D01T == 10)

# cleaning names

PISA2018_Y10 <- janitor::clean_names(PISA2018_Y10)
PISA_2015_Y10 <- janitor::clean_names(PISA_2015_Y10)
PISA2022_Y10 <- janitor::clean_names(PISA2022_Y10)

```


Get Mean + Confidence Interval for each year in literacy and numeracy (1 hr) 

```{r}

# Average Maths Scores for Y10s Across the Years
#2000
means_2000 <- Rrepest(data = PISA2000_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2003
means_2003 <- Rrepest(data = PISA2003_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2006
means_2006 <- Rrepest(data = PISA2006_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2009
means_2009 <- Rrepest(data = PISA2009_2_Y10, 
       svy = "PISA",
       est = est(c("mean", "std"), "pv@math"),
       cm.weights = c(paste0("w_fstr", 1:80)))

#2012
means_2012 <- Rrepest(data = PISA2012_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2015
means_2015 <- Rrepest(data = PISA_2015_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fsturwt",1:80)))
#2018
means_2018 <- Rrepest(data = PISA2018_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fsturwt", 1:80)))
#2022
means_2022 <- Rrepest(data = PISA2022_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fsturwt", 1:80)))

# making dataframe for year 10 math
# Add Year column
means_2000$Year <- 2000
means_2003$Year <- 2003
means_2006$Year <- 2006
means_2009$Year <- 2009
means_2012$Year <- 2012
means_2015$Year <- 2015
means_2018$Year <- 2018
means_2022$Year <- 2022

all_means <- rbind(
  means_2000,
  means_2003,
  means_2006,
  means_2009,
  means_2012,
  means_2015,
  means_2018,
  means_2022
)


all_means$CI_Lower <- all_means$`b.mean.pv@math` - 1.96 * all_means$`se.mean.pv@math`
all_means$CI_Upper <- all_means$`b.mean.pv@math` + 1.96 * all_means$`se.mean.pv@math`

PISA_means <- all_means[, c("Year", ".", "b.mean.pv@math", "se.mean.pv@math", "b.std.pv@math", "se.std.pv@math", "CI_Lower", "CI_Upper")]


```

```{r}
# Creating math mean dataframe and confidence intervals for the general public in the dataset
#2000
genpop_means_2000 <- Rrepest(data = PISA2000, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2003
genpop_means_2003 <- Rrepest(data = PISA2003, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2006
genpop_means_2006 <- Rrepest(data = PISA2006, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2009
genpop_means_2009 <- Rrepest(data = PISA2009_2, 
       svy = "PISA",
       est = est(c("mean", "std"), "pv@math"),
       cm.weights = c(paste0("w_fstr", 1:80)))

#2012
genpop_means_2012 <- Rrepest(data = PISA2012, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2015
genpop_means_2015 <- Rrepest(data = PISA2015, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fsturwt",1:80)))
#2018
genpop_means_2018 <- Rrepest(data = PISA2018, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fsturwt", 1:80)))
#2022
genpop_means_2022 <- Rrepest(data = PISA2022, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@math"),
        cm.weights = c(paste0("w_fsturwt", 1:80)))

#combing the dataframes for gen pop avg and conf int
#adding year column
genpop_means_2000$Year <- 2000
genpop_means_2003$Year <- 2003
genpop_means_2006$Year <- 2006
genpop_means_2009$Year <- 2009
genpop_means_2012$Year <- 2012
genpop_means_2015$Year <- 2015
genpop_means_2018$Year <- 2018
genpop_means_2022$Year <- 2022

genpop_all_means <- rbind(
  genpop_means_2000,
  genpop_means_2003,
  genpop_means_2006,
  genpop_means_2009,
  genpop_means_2012,
  genpop_means_2015,
  genpop_means_2018,
  genpop_means_2022
)

genpop_all_means$CI_Lower <- genpop_all_means$`b.mean.pv@math` - 1.96 * genpop_all_means$`se.mean.pv@math`
genpop_all_means$CI_Upper <- genpop_all_means$`b.mean.pv@math` + 1.96 * genpop_all_means$`se.mean.pv@math`

genpop_PISA_means <- genpop_all_means[, c("Year", ".", "b.mean.pv@math", "se.mean.pv@math", "b.std.pv@math", "se.std.pv@math", "CI_Lower", "CI_Upper")]


```





```{r}
# first version without the years formatting
ggplot(all_means, aes(x = Year, y = `b.mean.pv@math`)) +
  geom_point() +
  geom_errorbar(aes(ymin = CI_Lower, ymax = CI_Upper), width = 0.2) +
  labs(title = "Mean Math Scores Over Years with 95% Confidence Intervals",
       x = "Year", y = "Mean Math Score") +
  theme_minimal()
```


## Creating dataframe for year 10 literacy

```{r}
# Average Literacy Scores for Y10s Across the Years
#2000
readmeans_2000 <- Rrepest(data = PISA2000_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2003
readmeans_2003 <- Rrepest(data = PISA2003_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2006
readmeans_2006 <- Rrepest(data = PISA2006_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2009
readmeans_2009 <- Rrepest(data = PISA2009_2_Y10, 
       svy = "PISA",
       est = est(c("mean", "std"), "pv@read"),
       cm.weights = c(paste0("w_fstr", 1:80)))

#2012
readmeans_2012 <- Rrepest(data = PISA2012_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2015
readmeans_2015 <- Rrepest(data = PISA_2015_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fsturwt",1:80)))
#2018
readmeans_2018 <- Rrepest(data = PISA2018_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fsturwt", 1:80)))
#2022
readmeans_2022 <- Rrepest(data = PISA2022_Y10, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fsturwt", 1:80)))

```

```{r}
# Add Year column
readmeans_2000$Year <- 2000
readmeans_2003$Year <- 2003
readmeans_2006$Year <- 2006
readmeans_2009$Year <- 2009
readmeans_2012$Year <- 2012
readmeans_2015$Year <- 2015
readmeans_2018$Year <- 2018
readmeans_2022$Year <- 2022

all_readmeans <- rbind(
  readmeans_2000,
  readmeans_2003,
  readmeans_2006,
  readmeans_2009,
  readmeans_2012,
  readmeans_2015,
  readmeans_2018,
  readmeans_2022
)


all_readmeans$CI_Lower <- all_readmeans$`b.mean.pv@read` - 1.96 * all_readmeans$`se.mean.pv@read`
all_readmeans$CI_Upper <- all_readmeans$`b.mean.pv@read` + 1.96 * all_readmeans$`se.mean.pv@read`

PISA_readmeans <- all_readmeans[, c("Year", ".", "b.mean.pv@read", "se.mean.pv@read", "b.std.pv@read", "se.std.pv@read", "CI_Lower", "CI_Upper")]
```

```{r}
# creating dataframe for literacy for general population
# Creating math mean dataframe and confidence intervals for the general public in the dataset
#2000
genpop_read_means_2000 <- Rrepest(data = PISA2000, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2003
genpop_read_means_2003 <- Rrepest(data = PISA2003, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2006
genpop_read_means_2006 <- Rrepest(data = PISA2006, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2009
genpop_read_means_2009 <- Rrepest(data = PISA2009_2, 
       svy = "PISA",
       est = est(c("mean", "std"), "pv@read"),
       cm.weights = c(paste0("w_fstr", 1:80)))

#2012
genpop_read_means_2012 <- Rrepest(data = PISA2012, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fstr", 1:80)))
#2015
genpop_read_means_2015 <- Rrepest(data = PISA2015, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fsturwt",1:80)))
#2018
genpop_read_means_2018 <- Rrepest(data = PISA2018, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fsturwt", 1:80)))
#2022
genpop_read_means_2022 <- Rrepest(data = PISA2022, 
        svy = "PISA",
        est = est(c("mean", "std"), "pv@read"),
        cm.weights = c(paste0("w_fsturwt", 1:80)))

#combing the dataframes for gen pop avg and conf int
#adding year column
genpop_read_means_2000$Year <- 2000
genpop_read_means_2003$Year <- 2003
genpop_read_means_2006$Year <- 2006
genpop_read_means_2009$Year <- 2009
genpop_read_means_2012$Year <- 2012
genpop_read_means_2015$Year <- 2015
genpop_read_means_2018$Year <- 2018
genpop_read_means_2022$Year <- 2022

genpop_read_all_means <- rbind(
  genpop_read_means_2000,
  genpop_read_means_2003,
  genpop_read_means_2006,
  genpop_read_means_2009,
  genpop_read_means_2012,
  genpop_read_means_2015,
  genpop_read_means_2018,
  genpop_read_means_2022
)

genpop_read_all_means$CI_Lower <- genpop_read_all_means$`b.mean.pv@read` - 1.96 * genpop_read_all_means$`se.mean.pv@read`
genpop_read_all_means$CI_Upper <- genpop_read_all_means$`b.mean.pv@read` + 1.96 * genpop_read_all_means$`se.mean.pv@read`

genpop_PISA_read_means <- genpop_read_all_means[, c("Year", ".", "b.mean.pv@read", "se.mean.pv@read", "b.std.pv@read", "se.std.pv@read", "CI_Lower", "CI_Upper")]

```





Create national line charts for Y10 literacy and numeracy (2 hr) 
- version take numbers out
- 1.8 annotation decline represents 'decrease of this much'
- decline is however many years of learning: most re
- check into 2018 - 2022 delay, pisa sitting (2018 and 2022 pisa gap) timing of 2022 test
- all students vs year 10 only


```{r}
# chart for year 10 numeracy w/ general population
yr10scores_ci <- ggplot(PISA_means, aes(x = Year, y = `b.mean.pv@math`)) +
  geom_point() +
  geom_line(data = subset(PISA_means, Year <= 2018)) +  
  geom_line(data = subset(PISA_means, Year >= 2022)) +  
  geom_errorbar(aes(ymin = CI_Lower, ymax = CI_Upper), width = 0) + 
  scale_x_continuous(breaks = all_means$Year) + 
  labs(title = "Year 10's math scores have been declining over the years",
       subtitle = glue("Average {colour_text('#FF0000','PISA scores')} and {colour_text(grattan_orange, 'confidence intervals')} for year 10s across the years"),
       x = "Year", y = "Mean Math Score") +
  theme_minimal()

#overlapping, adding points/amending error bars to match grattan style
yr10scores_ci +
  geom_line(data = subset(genpop_PISA_means, Year <= 2018), 
            aes(x = Year, y = `b.mean.pv@math`), 
            color = "darkred", linetype = "solid", size = 1, alpha = 0.7) +  
  geom_point(data = subset(genpop_PISA_means, Year <= 2018), 
             aes(x = Year, y = `b.mean.pv@math`), 
             color = "darkred", size = 2, alpha = 0.7) + 
  geom_point(data = subset(genpop_PISA_means, Year == 2022), 
             aes(x = Year, y = `b.mean.pv@math`), 
             color = "darkred", size = 2, alpha = 0.7) +  
  geom_point(data = subset(PISA_means, Year == 2022), 
             aes(x = Year, y = `b.mean.pv@math`), 
             color = "orange", size = 2, alpha = 0.7) + 
  theme_grattan(chart_type = "line") +
  grattan_colour_manual(2, faded_level = 2) +
  theme(axis.line = element_line(colour = "grey80")) +
  grattan_y_continuous() +
  theme(plot.subtitle = element_markdown(lineheight = 1.1)) +
  annotate(geom = "rect", xmin = 2018, xmax = 2022, ymin = -Inf, ymax = Inf, 
           fill = "lightgrey", alpha = 0.2, color = NA) + 
  annotate("text", x = 2020, y = 500, label = "1 Year Delay Due to COVID-19", 
           size = 4, color = "black", angle = 90, hjust = 0.5) +
  # arrow and annotation
  #annotate("segment", x = 2006, xend = 2004, y = 530, yend = 526, 
           #arrow = arrow(length = unit(0.3, "cm")), color = "darkred", size = 0.5) +
  annotate("text", x = 2006.2, y = 531, label = "PISA Population Average", 
           hjust = 0, color = "darkred", size = 4)

```

```{r}
# chart for year 10 literacy w/ general population
yr10litscores_ci <- ggplot(PISA_readmeans, aes(x = Year, y = `b.mean.pv@read`)) +
  geom_point() +
  geom_line(data = subset(PISA_readmeans, Year <= 2018)) +  
  geom_line(data = subset(PISA_readmeans, Year >= 2022)) +  
  geom_errorbar(aes(ymin = CI_Lower, ymax = CI_Upper), width = 0) + 
  scale_x_continuous(breaks = all_readmeans$Year) + 
  labs(title = "Year 10's literacy scores have been declining over the years",
       subtitle = glue("Average {colour_text('#FF0000','PISA scores')} and {colour_text(grattan_orange, 'confidence intervals')} for year 10s across the years"),
       x = "Year") +
  theme_minimal()

#overlapping, adding points/amending error bars to match grattan style
yr10litscores_ci +
  geom_line(data = subset(genpop_PISA_read_means, Year <= 2018), 
            aes(x = Year, y = `b.mean.pv@read`), 
            color = "darkred", linetype = "solid", size = 1, alpha = 0.7) +  
  geom_point(data = subset(genpop_PISA_read_means, Year <= 2018), 
             aes(x = Year, y = `b.mean.pv@read`), 
             color = "darkred", size = 2, alpha = 0.7) + 
  geom_point(data = subset(genpop_PISA_read_means, Year == 2022), 
             aes(x = Year, y = `b.mean.pv@read`), 
             color = "darkred", size = 2, alpha = 0.7) +  
  geom_point(data = subset(PISA_readmeans, Year == 2022), 
             aes(x = Year, y = `b.mean.pv@read`), 
             color = "orange", size = 2, alpha = 0.7) + 
  theme_grattan(chart_type = "line") +
  grattan_colour_manual(2, faded_level = 2) +
  theme(axis.line = element_line(colour = "grey80")) +
  grattan_y_continuous() +
  theme(plot.subtitle = element_markdown(lineheight = 1.1)) +
  annotate(geom = "rect", xmin = 2018, xmax = 2022, ymin = -Inf, ymax = Inf, 
           fill = "lightgrey", alpha = 0.2, color = NA) + 
  annotate("text", x = 2020, y = 500, label = "1 Year Delay Due to COVID-19", 
           size = 4, color = "black", angle = 90, hjust = 0.5) 
```

